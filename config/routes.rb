Rails.application.routes.draw do
  # get 'password_resets/new'
  #
  # get 'password_resets/edit'

  # get 'sessions/new'
  #
  # get 'users/new'



  # get 'static_pages/help'
  # get 'static_pages/about'
  # get  'static_pages/contact'

# The second of these patterns routes a GET request for the URL /help to the
# help action in the Static Pages controller, so that we can use the URL /help
# in place of the more verbose /static_pages/help.
  root 'static_pages#home'
  get 'help' => 'static_pages#help'
  get 'about'   => 'static_pages#about'
  get 'contact' => 'static_pages#contact'
  get 'signup'  => 'users#new'
  get    'login'   => 'sessions#new'
  post   'login'   => 'sessions#create'
  delete 'logout'  => 'sessions#destroy'

  resources :users do
    member do
      get :following, :followers
    end
  end

  # You might suspect that the URLs for following and followers will look
  # like /users/1/following and /users/1/followers, and that is exactly what the
  # code in Listing 12.15 arranges. Since both pages will be showing data, the
  # proper HTTP verb is a GET request, so we use the get method to arrange for
  # the URLs to respond appropriately. Meanwhile, the member method arranges for
  # the routes to respond to URLs containing the user id. The other possibility,
  # collection, works without the id, so that
  #
  # resources :users do
  #   collection do
  #     get :tigers
  #   end
  # end
  # would respond to the URL /users/tigers (presumably to display all the tigers in our application).
  #
  # A table of the routes generated by Listing 12.15 appears in Table 12.2.
  # Note the named routes for the followed user and followers pages, which weâ€™ll
  # put to use shortly.
  #
  # HTTP request	URL	                Action	  Named route
  #
  # GET	          /users/1/following	following	following_user_path(1)
  # GET	          /users/1/followers	followers	followers_user_path(1)
  #
  # Table 12.2: RESTful routes provided by the custom rules in resource in Listing 12.15.


  resources :account_activations, only: [:edit]
  resources :password_resets,     only: [:new, :create, :edit, :update]
  resources :microposts,          only: [:create, :destroy]
  resources :relationships,       only: [:create, :destroy]


  # The priority is based upon order of creation: first created -> highest priority.
  # See how all your routes lay out with "rake routes".

  # You can have the root of your site routed with "root"
  # root 'welcome#index'

  # Example of regular route:
  #   get 'products/:id' => 'catalog#view'

  # Example of named route that can be invoked with purchase_url(id: product.id)
  #   get 'products/:id/purchase' => 'catalog#purchase', as: :purchase

  # Example resource route (maps HTTP verbs to controller actions automatically):
  #   resources :products

  # Example resource route with options:
  #   resources :products do
  #     member do
  #       get 'short'
  #       post 'toggle'
  #     end
  #
  #     collection do
  #       get 'sold'
  #     end
  #   end

  # Example resource route with sub-resources:
  #   resources :products do
  #     resources :comments, :sales
  #     resource :seller
  #   end

  # Example resource route with more complex sub-resources:
  #   resources :products do
  #     resources :comments
  #     resources :sales do
  #       get 'recent', on: :collection
  #     end
  #   end

  # Example resource route with concerns:
  #   concern :toggleable do
  #     post 'toggle'
  #   end
  #   resources :posts, concerns: :toggleable
  #   resources :photos, concerns: :toggleable

  # Example resource route within a namespace:
  #   namespace :admin do
  #     # Directs /admin/products/* to Admin::ProductsController
  #     # (app/controllers/admin/products_controller.rb)
  #     resources :products
  #   end
end
